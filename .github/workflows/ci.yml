name: C++ CI

on:
  push:
  pull_request:

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Release]

    name: ${{ matrix.os }} / ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    env:
      SOURCE_DIR: BlokchainSim/BlokchainSim     # nested CMakeLists

    steps:
    # ---- checkout ----------------------------------------------------------
    - uses: actions/checkout@v4

    # ---- Linux dependencies ------------------------------------------------
    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libssl-dev qt6-base-dev

    # ---- Windows toolchain -------------------------------------------------
    - name: Setup MSVC (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Qt 6 on Windows via aqt
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        pip install aqtinstall
        # Qt ≥6.6 ships essentials in one bundle → no "-m qtbase"
        aqt install-qt windows desktop 6.6.2 win64_msvc2019_64
        echo "QT_ROOT=$PWD/Qt/6.6.2/msvc2019_64" | `
             Out-File -FilePath $env:GITHUB_ENV -Append

    # ---- configure ---------------------------------------------------------
    - name: Configure CMake
      run: |
        cmake -S "$SOURCE_DIR" -B build -G Ninja \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DCMAKE_PREFIX_PATH="$QT_ROOT"
      shell: bash

    # ---- build -------------------------------------------------------------
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
      shell: bash

    # ---- test --------------------------------------------------------------
    - name: Run unit tests
      run: ctest --test-dir build -C ${{ matrix.build_type }} --output-on-failure
      shell: bash
